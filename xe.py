import streamlit as st

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.set_page_config(
    page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –•–ª–µ–±–Ω—ã—Ö –ï–¥–∏–Ω–∏—Ü",
    page_icon="https://cdn-icons-png.flaticon.com/512/1046/1046784.png",
    layout="centered"
)

# --- PWA HTML –±–ª–æ–∫ ---
st.markdown("""
<link rel="apple-touch-icon" sizes="180x180" href="https://cdn-icons-png.flaticon.com/512/1046/1046784.png">
<link rel="icon" type="image/png" sizes="32x32" href="https://cdn-icons-png.flaticon.com/512/1046/1046784.png">
<link rel="manifest" href="manifest.json">
<meta name="theme-color" content="#ffffff">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
<script>
if ("serviceWorker" in navigator) {
  window.addEventListener("load", function() {
    navigator.serviceWorker.register("service-worker.js")
    .then(reg => console.log("Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:", reg.scope))
    .catch(err => console.log("–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker:", err));
  });
}
</script>
""", unsafe_allow_html=True)

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
for key in ["carbs", "protein", "fat", "portions", "history"]:
    if key not in st.session_state:
        st.session_state[key] = 0.0 if key in ["carbs", "protein", "fat"] else 1 if key == "portions" else []

# --- –ó–∞–≥–æ–ª–æ–≤–æ–∫ ---
st.title("üçû –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –•–ª–µ–±–Ω—ã—Ö –ï–¥–∏–Ω–∏—Ü (–•–ï)")

# --- –§—É–Ω–∫—Ü–∏–∏ ---
def reset_fields():
    st.session_state.carbs = 0.0
    st.session_state.protein = 0.0
    st.session_state.fat = 0.0
    st.session_state.portions = 1

def clear_history():
    st.session_state.history = []

# --- –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏: –¥–≤–∞ —Ä–∞—Å—á—ë—Ç–∞ ---
tab1, tab2 = st.tabs(["üßÆ –û—Å–Ω–æ–≤–Ω–æ–π —Ä–∞—Å—á—ë—Ç", "‚öñÔ∏è –†–∞—Å—á—ë—Ç –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É"])

# === üßÆ –í–∫–ª–∞–¥–∫–∞ 1: –û—Å–Ω–æ–≤–Ω–æ–π —Ä–∞—Å—á—ë—Ç ===
with tab1:
    st.subheader("üßÆ –û—Å–Ω–æ–≤–Ω–æ–π —Ä–∞—Å—á—ë—Ç –ø–æ –ø–æ—Ä—Ü–∏—è–º")
    st.write("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–µ–ª–∫–æ–≤, –∂–∏—Ä–æ–≤, —É–≥–ª–µ–≤–æ–¥–æ–≤ –∏ —á–∏—Å–ª–æ –ø–æ—Ä—Ü–∏–π.")

    carbs = st.number_input("–£–≥–ª–µ–≤–æ–¥—ã (–≥):", min_value=0.0, step=1.0, key="carbs")
    protein = st.number_input("–ë–µ–ª–∫–∏ (–≥):", min_value=0.0, step=1.0, key="protein")
    fat = st.number_input("–ñ–∏—Ä—ã (–≥):", min_value=0.0, step=1.0, key="fat")
    portions = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π:", min_value=1, step=1, key="portions")

    col1, col2 = st.columns(2)
    with col1:
        calculate = st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –•–ï", use_container_width=True, type="primary")
    with col2:
        st.button("–°–±—Ä–æ—Å–∏—Ç—å –ø–æ–ª—è", on_click=reset_fields, use_container_width=True)

    if calculate:
        # –†–∞—Å—á—ë—Ç—ã
        calories_single = carbs*4 + protein*4 + fat*9
        xe_carbs_single = carbs / 10
        bje_single = (protein*4 + fat*9) / 100
        xe_total_single = xe_carbs_single + bje_single

        calories_total = calories_single * portions
        xe_carbs_total = xe_carbs_single * portions
        bje_total = bje_single * portions
        xe_total_total = xe_total_single * portions

        st.success(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã (–¥–ª—è {portions} –ø–æ—Ä—Ü–∏–π):")
        st.metric("–û–±—â–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å", f"{calories_total:.1f} –∫–∫–∞–ª")
        st.metric("–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º", f"{xe_carbs_total:.2f}")
        st.metric("–ë–ñ–ï", f"{bje_total:.2f}")
        st.metric("üí† –û–±—â–∞—è —Å—É–º–º–∞ –•–ï", f"{xe_total_total:.2f}")

        st.info("–ù–∞ –æ–¥–Ω—É –ø–æ—Ä—Ü–∏—é:")
        st.write(f"–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å: {calories_total / portions:.1f} –∫–∫–∞–ª")
        st.write(f"–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º: {xe_carbs_total / portions:.2f}")
        st.write(f"–ë–ñ–ï: {bje_total / portions:.2f}")
        st.write(f"üí† –û–±—â–∞—è –•–ï: {xe_total_total / portions:.2f}")

        # –ò—Å—Ç–æ—Ä–∏—è
        st.session_state.history.append({
            "–£–≥–ª–µ–≤–æ–¥—ã": carbs,
            "–ë–µ–ª–∫–∏": protein,
            "–ñ–∏—Ä—ã": fat,
            "–ü–æ—Ä—Ü–∏–∏": portions,
            "–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å (–≤—Å–µ–≥–æ)": calories_total,
            "–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º (–≤—Å–µ–≥–æ)": xe_carbs_total,
            "–ë–ñ–ï (–≤—Å–µ–≥–æ)": bje_total,
            "–û–±—â–∞—è –•–ï (–≤—Å–µ–≥–æ)": xe_total_total
        })


# === ‚öñÔ∏è –í–∫–ª–∞–¥–∫–∞ 2: –†–∞—Å—á—ë—Ç –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É ===
with tab2:
    st.subheader("‚öñÔ∏è –†–∞—Å—á—ë—Ç –•–ï –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É")
    st.write("–í–≤–µ–¥–∏—Ç–µ –ë–ñ–£ –Ω–∞ 100 –≥ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –º–∞—Å—Å—É –ø—Ä–æ–¥—É–∫—Ç–∞ (–≤ –≥—Ä–∞–º–º–∞—Ö):")

    carbs_100 = st.number_input("–£–≥–ª–µ–≤–æ–¥—ã (–≥ –Ω–∞ 100 –≥):", min_value=0.0, step=0.1)
    protein_100 = st.number_input("–ë–µ–ª–∫–∏ (–≥ –Ω–∞ 100 –≥):", min_value=0.0, step=0.1)
    fat_100 = st.number_input("–ñ–∏—Ä—ã (–≥ –Ω–∞ 100 –≥):", min_value=0.0, step=0.1)
    mass = st.number_input("–ú–∞—Å—Å–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ (–≥):", min_value=1.0, step=1.0)

    if st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É", type="primary", use_container_width=True):
        # –ü–µ—Ä–µ—Å—á—ë—Ç –Ω–∞ –≤—Å—é –º–∞—Å—Å—É
        carbs_total = carbs_100 * mass / 100
        protein_total = protein_100 * mass / 100
        fat_total = fat_100 * mass / 100

        # –†–∞—Å—á—ë—Ç—ã
        calories_total = (carbs_total * 4) + (protein_total * 4) + (fat_total * 9)
        xe_carbs = carbs_total / 10
        bje = (protein_total * 4 + fat_total * 9) / 100
        xe_total = xe_carbs + bje

        st.success("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞:")
        st.metric("–ú–∞—Å—Å–∞ –ø—Ä–æ–¥—É–∫—Ç–∞", f"{mass:.0f} –≥")
        st.metric("–û–±—â–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å", f"{calories_total:.1f} –∫–∫–∞–ª")
        st.metric("–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º", f"{xe_carbs:.2f}")
        st.metric("–ë–ñ–ï (–±–µ–ª–∫–æ–≤–æ-–∂–∏—Ä–æ–≤—ã–µ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç—ã)", f"{bje:.2f}")
        st.metric("üí† –û–±—â–∞—è —Å—É–º–º–∞ –•–ï", f"{xe_total:.2f}")

        st.info(f"""
        **–£–≥–ª–µ–≤–æ–¥–æ–≤ –≤—Å–µ–≥–æ:** {carbs_total:.1f} –≥  
        **–ë–µ–ª–∫–æ–≤ –≤—Å–µ–≥–æ:** {protein_total:.1f} –≥  
        **–ñ–∏—Ä–æ–≤ –≤—Å–µ–≥–æ:** {fat_total:.1f} –≥
        """)


# --- üìò –°–ø—Ä–∞–≤–∫–∞ ---
st.markdown("---")
st.header("üìò –ö–∞–∫ –∫–æ–º–ø–µ–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –ë–ñ–ï")
st.markdown("""
1 –ë–ñ–ï = 1 –•–ï. –î–æ–∑—É –Ω—É–∂–Ω–æ —Ä–∞—Å—Ç—è–≥–∏–≤–∞—Ç—å –∏–ª–∏ –ø–æ–¥–∫–∞–ª—ã–≤–∞—Ç—å —á–µ—Ä–µ–∑ 1‚Äì3 —á–∞—Å–∞ –ø–æ—Å–ª–µ –µ–¥—ã.

#### ‚è≥ –ü—Ä–∏–º–µ—Ä:
- 1 –ë–ñ–ï ‚Üí —Ä–∞—Å—Ç—è–Ω—É—Ç—å –Ω–∞ 3 —á–∞—Å–∞  
- 2 –ë–ñ–ï ‚Üí –Ω–∞ 4 —á–∞—Å–∞  
- 3 –ë–ñ–ï ‚Üí –Ω–∞ 5 —á–∞—Å–æ–≤  
- –ë–æ–ª–µ–µ 4 –ë–ñ–ï ‚Üí –Ω–∞ 6‚Äì10 —á–∞—Å–æ–≤  

#### üíâ –ï—Å–ª–∏ –≤—ã –Ω–∞ –ø–æ–º–ø–µ:
‚Ä¢ 50 % ‚Äî –æ–±—ã—á–Ω—ã–π –±–æ–ª—é—Å –ø–µ—Ä–µ–¥ –µ–¥–æ–π  
‚Ä¢ 50 % ‚Äî —Ä–∞—Å—Ç—è–Ω—É—Ç—å –Ω–∞ 4‚Äì5 —á  

#### üíâ –ï—Å–ª–∏ –≤—ã –Ω–∞ —Ä—É—á–∫–∞—Ö:
‚Ä¢ 50 % ‚Äî –ø–æ–¥–∫–æ–ª–∫–∞ –ø–µ—Ä–µ–¥ –µ–¥–æ–π  
‚Ä¢ 50 % ‚Äî —á–µ—Ä–µ–∑ 1.5‚Äì3 —á  
""")

# --- üìú –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á—ë—Ç–æ–≤ ---
st.markdown("---")
st.header("üìú –ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ä–∞—Å—á—ë—Ç–æ–≤")

if st.session_state.history:
    st.button("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", on_click=clear_history, use_container_width=True)
    for i, entry in enumerate(reversed(st.session_state.history[-5:]), 1):
        st.write(f"**–†–∞—Å—á—ë—Ç {i}:**")
        st.write(f"–£–≥–ª–µ–≤–æ–¥—ã: {entry['–£–≥–ª–µ–≤–æ–¥—ã']} –≥, –ë–µ–ª–∫–∏: {entry['–ë–µ–ª–∫–∏']} –≥, –ñ–∏—Ä—ã: {entry['–ñ–∏—Ä—ã']} –≥")
        st.write(f"–ü–æ—Ä—Ü–∏–∏: {entry['–ü–æ—Ä—Ü–∏–∏']}")
        st.write(f"–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å (–≤—Å–µ–≥–æ): {entry['–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å (–≤—Å–µ–≥–æ)']:.1f} –∫–∫–∞–ª")
        st.write(f"–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º: {entry['–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º (–≤—Å–µ–≥–æ)']:.2f}")
        st.write(f"–ë–ñ–ï: {entry['–ë–ñ–ï (–≤—Å–µ–≥–æ)']:.2f}")
        st.write(f"üí† –û–±—â–∞—è –•–ï: {entry['–û–±—â–∞—è –•–ï (–≤—Å–µ–≥–æ)']:.2f}")
else:
    st.info("–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫–∞ –ø—É—Å—Ç–∞.")

# --- –ü–æ–¥–ø–∏—Å—å ---
st.markdown("---")
st.caption("üìò –§–æ—Ä–º—É–ª—ã: 10 –≥ —É–≥–ª–µ–≤–æ–¥–æ–≤ = 1 –•E | 100 –∫–∫–∞–ª –æ—Ç –±–µ–ª–∫–æ–≤ –∏ –∂–∏—Ä–æ–≤ = 1 –ë–ñ–ï")
st.caption("1 –≥ –±–µ–ª–∫–∞ = 4 –∫–∫–∞–ª | 1 –≥ –∂–∏—Ä–∞ = 9 –∫–∫–∞–ª")