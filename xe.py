import streamlit as st

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.set_page_config(
    page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –•–ª–µ–±–Ω—ã—Ö –ï–¥–∏–Ω–∏—Ü",
    page_icon="üçû",
    layout="wide"
)

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
for key in ["carbs", "protein", "fat", "portions", "history"]:
    if key not in st.session_state:
        st.session_state[key] = 0.0 if key in ["carbs", "protein", "fat"] else 1 if key == "portions" else []

# --- –ó–∞–≥–æ–ª–æ–≤–æ–∫ ---
st.title("üçû –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –•–ª–µ–±–Ω—ã—Ö –ï–¥–∏–Ω–∏—Ü (–•–ï)")

# --- –§—É–Ω–∫—Ü–∏–∏ ---
def reset_fields():
    st.session_state.carbs = 0.0
    st.session_state.protein = 0.0
    st.session_state.fat = 0.0
    st.session_state.portions = 1

def clear_history():
    st.session_state.history = []

# --- –í–ö–õ–ê–î–ö–ò ---
tab1, tab2 = st.tabs(["üßÆ –û—Å–Ω–æ–≤–Ω–æ–π —Ä–∞—Å—á—ë—Ç", "‚öñÔ∏è –†–∞—Å—á—ë—Ç –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É"])

# === üßÆ –í–∫–ª–∞–¥–∫–∞ 1 ‚Äî –û—Å–Ω–æ–≤–Ω–æ–π —Ä–∞—Å—á—ë—Ç ===
with tab1:
    st.subheader("–†–∞—Å—á—ë—Ç –ø–æ –ø–æ—Ä—Ü–∏—è–º")

    carbs = st.number_input("–£–≥–ª–µ–≤–æ–¥—ã (–≥):", min_value=0.0, step=1.0, key="carbs")
    protein = st.number_input("–ë–µ–ª–∫–∏ (–≥):", min_value=0.0, step=1.0, key="protein")
    fat = st.number_input("–ñ–∏—Ä—ã (–≥):", min_value=0.0, step=1.0, key="fat")
    portions = st.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π:", min_value=1, step=1, key="portions")

    col_btn1, col_btn2 = st.columns(2)
    with col_btn1:
        calc_main = st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –•–ï", use_container_width=True, type="primary", key="calc_main")
    with col_btn2:
        st.button("–°–±—Ä–æ—Å–∏—Ç—å", on_click=reset_fields, use_container_width=True)

    if calc_main:
        # –†–∞—Å—á—ë—Ç—ã
        calories_single = carbs * 4 + protein * 4 + fat * 9
        xe_carbs_single = carbs / 10
        bje_single = (protein * 4 + fat * 9) / 100
        xe_total_single = xe_carbs_single + bje_single

        calories_total = calories_single * portions
        xe_carbs_total = xe_carbs_single * portions
        bje_total = bje_single * portions
        xe_total_total = xe_total_single * portions

        with st.container(border=True):
            st.success(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã (–¥–ª—è {portions} –ø–æ—Ä—Ü–∏–π):")
            st.metric("–û–±—â–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å", f"{calories_total:.1f} –∫–∫–∞–ª")
            st.metric("–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º", f"{xe_carbs_total:.2f}")
            st.metric("–ë–ñ–ï", f"{bje_total:.2f}")
            st.metric("üí† –û–±—â–∞—è –•–ï", f"{xe_total_total:.2f}")

            st.info("–ù–∞ 1 –ø–æ—Ä—Ü–∏—é:")
            st.write(f"–ö–∫–∞–ª: {calories_total / portions:.1f}")
            st.write(f"–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º: {xe_carbs_total / portions:.2f}")
            st.write(f"–ë–ñ–ï: {bje_total / portions:.2f}")
            st.write(f"üí† –û–±—â–∞—è –•–ï: {xe_total_total / portions:.2f}")

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        st.session_state.history.append({
            "–¢–∏–ø —Ä–∞—Å—á—ë—Ç–∞": "–û—Å–Ω–æ–≤–Ω–æ–π",
            "–£–≥–ª–µ–≤–æ–¥—ã": carbs,
            "–ë–µ–ª–∫–∏": protein,
            "–ñ–∏—Ä—ã": fat,
            "–ü–æ—Ä—Ü–∏–∏": portions,
            "–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å (–≤—Å–µ–≥–æ)": calories_total,
            "–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º (–≤—Å–µ–≥–æ)": xe_carbs_total,
            "–ë–ñ–ï (–≤—Å–µ–≥–æ)": bje_total,
            "–û–±—â–∞—è –•–ï (–≤—Å–µ–≥–æ)": xe_total_total
        })

# === ‚öñÔ∏è –í–∫–ª–∞–¥–∫–∞ 2 ‚Äî –†–∞—Å—á—ë—Ç –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É ===
with tab2:
    st.subheader("–†–∞—Å—á—ë—Ç –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É (–Ω–∞ 100 –≥)")

    carbs_100 = st.number_input("–£–≥–ª–µ–≤–æ–¥—ã (–≥/100 –≥):", min_value=0.0, step=0.1, key="carbs_100")
    protein_100 = st.number_input("–ë–µ–ª–∫–∏ (–≥/100 –≥):", min_value=0.0, step=0.1, key="protein_100")
    fat_100 = st.number_input("–ñ–∏—Ä—ã (–≥/100 –≥):", min_value=0.0, step=0.1, key="fat_100")
    mass = st.number_input("–ú–∞—Å—Å–∞ –ø—Ä–æ–¥—É–∫—Ç–∞ (–≥):", min_value=1.0, step=1.0, key="mass")

    if st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–æ –ø—Ä–æ–¥—É–∫—Ç—É", type="primary", use_container_width=True, key="calc_product"):
        # –ü–µ—Ä–µ—Å—á—ë—Ç –Ω–∞ –º–∞—Å—Å—É
        carbs_total = carbs_100 * mass / 100
        protein_total = protein_100 * mass / 100
        fat_total = fat_100 * mass / 100

        calories_total = (carbs_total * 4) + (protein_total * 4) + (fat_total * 9)
        xe_carbs = carbs_total / 10
        bje = (protein_total * 4 + fat_total * 9) / 100
        xe_total = xe_carbs + bje

        with st.container(border=True):
            st.success("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞:")
            st.metric("–ú–∞—Å—Å–∞", f"{mass:.0f} –≥")
            st.metric("–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º", f"{xe_carbs:.2f}")
            st.metric("–ë–ñ–ï", f"{bje:.2f}")
            st.metric("üí† –û–±—â–∞—è –•–ï", f"{xe_total:.2f}")
            st.metric("–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å", f"{calories_total:.1f} –∫–∫–∞–ª")

            st.info(f"""
            **–£–≥–ª–µ–≤–æ–¥–æ–≤:** {carbs_total:.1f} –≥  
            **–ë–µ–ª–∫–æ–≤:** {protein_total:.1f} –≥  
            **–ñ–∏—Ä–æ–≤:** {fat_total:.1f} –≥
            """)

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        st.session_state.history.append({
            "–¢–∏–ø —Ä–∞—Å—á—ë—Ç–∞": "–ü–æ –ø—Ä–æ–¥—É–∫—Ç—É",
            "–£–≥–ª–µ–≤–æ–¥—ã": carbs_total,
            "–ë–µ–ª–∫–∏": protein_total,
            "–ñ–∏—Ä—ã": fat_total,
            "–ü–æ—Ä—Ü–∏–∏": 1,
            "–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å (–≤—Å–µ–≥–æ)": calories_total,
            "–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º (–≤—Å–µ–≥–æ)": xe_carbs,
            "–ë–ñ–ï (–≤—Å–µ–≥–æ)": bje,
            "–û–±—â–∞—è –•–ï (–≤—Å–µ–≥–æ)": xe_total
        })

# --- üìò –°–ø—Ä–∞–≤–∫–∞ ---
st.markdown("---")
st.header("üìò –ö–∞–∫ –∫–æ–º–ø–µ–Ω—Å–∏—Ä–æ–≤–∞—Ç—å –ë–ñ–ï")
st.markdown("""
1 –ë–ñ–ï = 1 –•–ï.  
–î–æ–∑—É –Ω—É–∂–Ω–æ —Ä–∞—Å—Ç—è–≥–∏–≤–∞—Ç—å –∏–ª–∏ –ø–æ–¥–∫–∞–ª—ã–≤–∞—Ç—å —á–µ—Ä–µ–∑ 1‚Äì3 —á–∞—Å–∞ –ø–æ—Å–ª–µ –µ–¥—ã.

#### ‚è≥ –ü—Ä–∏–º–µ—Ä:
- 1 –ë–ñ–ï ‚Üí –Ω–∞ 3 —á–∞—Å–∞  
- 2 –ë–ñ–ï ‚Üí –Ω–∞ 4 —á–∞—Å–∞  
- 3 –ë–ñ–ï ‚Üí –Ω–∞ 5 —á–∞—Å–æ–≤  
- –ë–æ–ª–µ–µ 4 –ë–ñ–ï ‚Üí –Ω–∞ 6‚Äì10 —á–∞—Å–æ–≤  

#### üíâ –ï—Å–ª–∏ –≤—ã –Ω–∞ –ø–æ–º–ø–µ:
‚Ä¢ 50 % ‚Äî –æ–±—ã—á–Ω—ã–π –±–æ–ª—é—Å –ø–µ—Ä–µ–¥ –µ–¥–æ–π  
‚Ä¢ 50 % ‚Äî —Ä–∞—Å—Ç—è–Ω—É—Ç—å –Ω–∞ 4‚Äì5 —á  

#### üíâ –ï—Å–ª–∏ –≤—ã –Ω–∞ —Ä—É—á–∫–∞—Ö:
‚Ä¢ 50 % ‚Äî –ø–æ–¥–∫–æ–ª–∫–∞ –ø–µ—Ä–µ–¥ –µ–¥–æ–π  
‚Ä¢ 50 % ‚Äî —á–µ—Ä–µ–∑ 1.5‚Äì3 —á  
""")

# --- üìú –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á—ë—Ç–æ–≤ ---
st.markdown("---")
st.header("üìú –ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ä–∞—Å—á—ë—Ç–æ–≤")

if st.session_state.history:
    st.button("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", on_click=clear_history, use_container_width=True)
    for i, entry in enumerate(reversed(st.session_state.history[-6:]), 1):
        st.write(f"**{i}. {entry['–¢–∏–ø —Ä–∞—Å—á—ë—Ç–∞']}**")
        st.write(f"–£–≥–ª–µ–≤–æ–¥—ã: {entry['–£–≥–ª–µ–≤–æ–¥—ã']:.1f} –≥ | –ë–µ–ª–∫–∏: {entry['–ë–µ–ª–∫–∏']:.1f} –≥ | –ñ–∏—Ä—ã: {entry['–ñ–∏—Ä—ã']:.1f} –≥")
        st.write(f"–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å: {entry['–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å (–≤—Å–µ–≥–æ)']:.1f} –∫–∫–∞–ª | –•–ï: {entry['–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º (–≤—Å–µ–≥–æ)']:.2f} | –ë–ñ–ï: {entry['–ë–ñ–ï (–≤—Å–µ–≥–æ)']:.2f} | üí† –û–±—â–∞—è –•–ï: {entry['–û–±—â–∞—è –•–ï (–≤—Å–µ–≥–æ)']:.2f}")
        st.markdown("---")
else:
    st.info("–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫–∞ –ø—É—Å—Ç–∞.")

st.caption("üìò –§–æ—Ä–º—É–ª—ã: 10 –≥ —É–≥–ª–µ–≤–æ–¥–æ–≤ = 1 –•E | 100 –∫–∫–∞–ª –æ—Ç –±–µ–ª–∫–æ–≤ –∏ –∂–∏—Ä–æ–≤ = 1 –ë–ñ–ï")
st.caption("1 –≥ –±–µ–ª–∫–∞ = 4 –∫–∫–∞–ª | 1 –≥ –∂–∏—Ä–∞ = 9 –∫–∫–∞–ª")