import streamlit as st

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.set_page_config(
    page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –•–ª–µ–±–Ω—ã—Ö –ï–¥–∏–Ω–∏—Ü",
    page_icon="üçû",
    layout="centered"
)

# --- –ó–∞–≥–æ–ª–æ–≤–æ–∫ ---
st.title("üçû –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –•–ª–µ–±–Ω—ã—Ö –ï–¥–∏–Ω–∏—Ü (–•–ï)")
st.write("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ä–∞—Å—á—ë—Ç –•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º, –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏ –∏ –æ–±—â—É—é —Å—É–º–º—É.")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session_state ---
for key in ["carbs", "protein", "fat", "history"]:
    if key not in st.session_state:
        st.session_state[key] = 0.0 if key != "history" else []

# --- –§—É–Ω–∫—Ü–∏–∏ ---
def reset_fields():
    st.session_state.carbs = 0.0
    st.session_state.protein = 0.0
    st.session_state.fat = 0.0

def clear_history():
    st.session_state.history = []

# --- –ü–æ–ª—è –≤–≤–æ–¥–∞ ---
carbs = st.number_input("–£–≥–ª–µ–≤–æ–¥—ã (–≥):", min_value=0.0, step=1.0, value=st.session_state.carbs, key="carbs")
protein = st.number_input("–ë–µ–ª–∫–∏ (–≥):", min_value=0.0, step=1.0, value=st.session_state.protein, key="protein")
fat = st.number_input("–ñ–∏—Ä—ã (–≥):", min_value=0.0, step=1.0, value=st.session_state.fat, key="fat")

# --- –ö–Ω–æ–ø–∫–∏ ---
col1, col2, col3 = st.columns([1,1,1])
with col1:
    calculate = st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –•–ï", use_container_width=True, type="primary")
with col2:
    st.button("–°–±—Ä–æ—Å–∏—Ç—å –ø–æ–ª—è", on_click=reset_fields, use_container_width=True)
with col3:
    st.button("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", on_click=clear_history, use_container_width=True)

# --- –õ–æ–≥–∏–∫–∞ —Ä–∞—Å—á—ë—Ç–∞ ---
if calculate:
    calories = (carbs * 4) + (protein * 4) + (fat * 9)
    xe_carbs = carbs / 10
    xe_calories = calories / 100
    xe_total = xe_carbs + xe_calories

    st.success("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á—ë—Ç–∞:")
    st.metric("–û–±—â–∞—è –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å", f"{calories:.1f} –∫–∫–∞–ª")
    st.metric("–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º", f"{xe_carbs:.2f}")
    st.metric("–•–ï –ø–æ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏", f"{xe_calories:.2f}")
    st.metric("üí† –û–±—â–∞—è —Å—É–º–º–∞ –•–ï", f"{xe_total:.2f}")

    # --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –∏—Å—Ç–æ—Ä–∏—é ---
    st.session_state.history.append({
        "–£–≥–ª–µ–≤–æ–¥—ã": carbs,
        "–ë–µ–ª–∫–∏": protein,
        "–ñ–∏—Ä—ã": fat,
        "–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å": calories,
        "–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º": xe_carbs,
        "–•–ï –ø–æ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏": xe_calories,
        "–û–±—â–∞—è –•–ï": xe_total
    })

# --- –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—á—ë—Ç–æ–≤ ---
if st.session_state.history:
    st.markdown("### üìú –ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ä–∞—Å—á—ë—Ç–æ–≤")
    for i, entry in enumerate(reversed(st.session_state.history[-5:]), 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5
        st.write(f"**–†–∞—Å—á—ë—Ç {i}:**")
        st.write(f"–£–≥–ª–µ–≤–æ–¥—ã: {entry['–£–≥–ª–µ–≤–æ–¥—ã']} –≥, –ë–µ–ª–∫–∏: {entry['–ë–µ–ª–∫–∏']} –≥, –ñ–∏—Ä—ã: {entry['–ñ–∏—Ä—ã']} –≥")
        st.write(f"–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å: {entry['–ö–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å']:.1f} –∫–∫–∞–ª")
        st.write(f"–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º: {entry['–•–ï –ø–æ —É–≥–ª–µ–≤–æ–¥–∞–º']:.2f}, –•–ï –ø–æ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏: {entry['–•–ï –ø–æ –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏']:.2f}")
        st.write(f"üí† –û–±—â–∞—è –•–ï: {entry['–û–±—â–∞—è –•–ï']:.2f}")
        st.markdown("---")

# --- –ü–æ–¥–ø–∏—Å—å ---
st.markdown("---")
st.caption("üìò –§–æ—Ä–º—É–ª—ã: 10 –≥ —É–≥–ª–µ–≤–æ–¥–æ–≤ = 1 –•E | 100 –∫–∫–∞–ª = 1 –•–ï")
st.caption("1 –≥ –±–µ–ª–∫–∞ = 4 –∫–∫–∞–ª | 1 –≥ –∂–∏—Ä–∞ = 9 –∫–∫–∞–ª")
st.caption("–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ —Å ‚ù§Ô∏è —Å –ø–æ–º–æ—â—å—é Streamlit")

